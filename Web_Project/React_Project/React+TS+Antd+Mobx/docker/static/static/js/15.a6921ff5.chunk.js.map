{"version":3,"sources":["api/role.ts","Components/Auth.tsx","Pages/Role/DeleteRole.tsx","Pages/Role/EditRole.tsx","Pages/Role/AddRole.tsx","Pages/Role/RoleList.tsx"],"names":["getRoleList","page","request","url","params","deleteRole","roleId","method","getRoleDetail","saveRole","roleName","permissionList","data","getAllRole","addRole","Auth","inject","observer","checkPermission","permission","props","getPermissionList","filter","p","path","length","this","children","Component","DeleteRole","confirm","role","id","then","response","code","msg","message","success","callback","warn","cancel","info","title","okText","placement","onConfirm","onCancel","cancelText","type","danger","tailLayout","wrapperCol","offset","span","layout","labelCol","EditRole","context","formRef","handleCancel","setState","nodeList","defaultCheckedKeys","defaultExpandedKeys","defaultSelectedKeys","createdAt","generatePermissionList","parentId","pl","forEach","key","push","loadPermission","permissionAll","permissions","map","current","setFieldsValue","componentDidUpdate","prevProps","prevState","snapshot","visible","onCheck","checkedKeys","checked","React","createRef","state","footer","ref","onFinish","initialValues","Item","label","name","rules","required","shouldUpdate","prevValues","curValues","additional","min","validator","rule","value","Promise","reject","resolve","defaultExpandAll","checkStrictly","showLine","checkable","treeData","htmlType","AddRole","resetFields","error","getAllPermission","reset","onReset","RoleList","loading","currentPage","dataList","totalCount","limit","roleList","pageSize","r","show","onChange","showAddRoleModal","isShowAddRoleModal","cancelAddRoleModal","refresh","onClick","dataSource","pagination","position","total","hideOnSinglePage","defaultCurrent","defaultPageSize","showSizeChanger","rowKey","Column","dataIndex","render"],"mappings":"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","file":"static/js/15.a6921ff5.chunk.js","sourcesContent":["import request from '../utils/request'\n\nexport const getRoleList = (page: number = 1) => {\n    return request({\n        url: '/admin/role/list',\n        params: {page: page}\n    })\n}\n\nexport const deleteRole = (roleId: number) => {\n    return request({\n        url: '/admin/role/delete/' + roleId,\n        method: 'delete'\n    })\n}\n\nexport const getRoleDetail = (roleId: number) => {\n    return request({\n        url: '/admin/role/detail/' + roleId\n    })\n}\nexport const saveRole = (roleId: number, roleName: string, permissionList: number[]) => {\n    return request({\n        url: '/admin/role/update/' + roleId,\n        method: 'put',\n        data: {\n            roleName: roleName,\n            permissionList: permissionList\n        }\n    })\n}\nexport const getAllRole = () => {\n\n    return request({\n        url: '/admin/role/all'\n    })\n}\nexport const addRole = (data: any) => {\n    return request({\n        url: '/admin/role/add',\n        method: 'post',\n        data: data\n    })\n}","import React, {Component, ReactNode} from 'react'\nimport {inject, observer} from \"mobx-react\";\nimport {default as PermissionList} from '../store/Permission'\n\ninterface IProps {\n    path: string\n    permission?: PermissionList\n    children?: ReactNode\n}\n\n// 把权限的唯一标识【path】传过来 ，把需要页面里做限制的组件传过来 判断权限 返回最终的组件\n// 如果没有权限就隐藏\n@inject('permission')\n@observer\nclass Auth extends Component<IProps, any> {\n    checkPermission = (permission: string): boolean => {\n        if (this.props.permission) {\n            return this.props.permission?.getPermissionList().filter((p) => p.path === this.props.path).length > 0;\n        }\n        return false\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.checkPermission(this.props.path) ?\n                        this.props.children\n                        :\n                        null\n                }\n            </>\n        )\n    }\n}\n\nexport default Auth\n","import React, {Component} from \"react\";\nimport {IRole} from \"./RoleList\";\nimport {Button, message, Popconfirm} from \"antd\";\nimport {deleteRole} from \"../../api/role\";\n\ninterface IProps {\n    role: IRole\n    callback: (role: IRole) => void\n}\n\nexport default class DeleteRole extends Component<IProps, any> {\n    confirm = () => {\n        deleteRole(this.props.role.id).then(response => {\n            const {code, msg} = response.data\n            if (code === 0) {\n                message.success('删除成功！')\n                this.props.callback(this.props.role)\n            } else {\n                message.warn(msg)\n            }\n        })\n    }\n    cancel = () => {\n        message.info('你取消了删除！')\n    }\n\n    render() {\n        return (\n            <>\n                <Popconfirm\n                    title='你确定要删除用户吗？删除后不可以恢复！'\n                    okText=\"删除\"\n                    placement=\"topRight\"\n                    onConfirm={this.confirm}\n                    onCancel={this.cancel}\n                    cancelText=\"取消\"\n                >\n                    <Button type='primary' danger>删除</Button>\n                </Popconfirm>\n            </>\n        )\n    }\n}\n","import React, {Component, RefObject} from \"react\";\nimport {Button, Form, Input, message, Modal, Space, Tree} from \"antd\";\nimport {FormInstance} from \"antd/lib/form\";\nimport {getRoleDetail, saveRole} from \"../../api/role\";\n\nconst tailLayout = {\n    wrapperCol: {offset: 8, span: 16},\n};\nconst layout = {\n    labelCol: {span: 6},\n    wrapperCol: {span: 16},\n};\n\ninterface IRole {\n    id: number\n    roleName: string\n    createdAt: string\n    permissionList?: number[]\n}\n\ninterface IProps {\n    visible: boolean\n    role?: IRole\n    callback: (visible: boolean) => void\n    saveRole: (role?: IRole) => void\n}\n\ninterface IPermission {\n    id: number\n    key: number\n    isMenu: number\n    parentId: number\n    path: string\n    title: string\n    children: IPermission[]\n}\n\ninterface IState {\n    nodeList: IPermission[]\n    defaultCheckedKeys: number[]\n    defaultSelectedKeys: number[]\n    defaultExpandedKeys: number[]\n}\n\nexport default class EditRole extends Component<IProps, IState> {\n    formRef: RefObject<FormInstance>\n\n    constructor(props: IProps, context: any) {\n        super(props, context);\n        this.formRef = React.createRef<FormInstance>()\n        this.state = {\n            nodeList: [],\n            defaultCheckedKeys: [],\n            defaultExpandedKeys: [],\n            defaultSelectedKeys: [],\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            nodeList: [],\n            defaultCheckedKeys: [],\n            defaultExpandedKeys: [],\n            defaultSelectedKeys: [],\n        })\n        this.props.callback(false)\n\n    }\n    saveRole = (role: IRole) => {\n        role.id = this.props.role?.id as number\n        saveRole(role.id, role.roleName, role.permissionList as []).then(response => {\n            const {code, msg} = response.data\n            if (code === 0) {\n                this.props.saveRole({\n                    id: role.id,\n                    roleName: role.roleName,\n                    createdAt: this.props.role?.createdAt as string\n                });\n                message.success(msg)\n            } else {\n                message.warn(msg)\n            }\n        })\n    }\n    generatePermissionList = (permissionList: IPermission[], parentId: number = 0): IPermission[] => {\n        let pl: IPermission[] = []\n        permissionList.forEach((permission: IPermission) => {\n            if (permission.parentId === parentId) {\n                permission.key = permission.id\n                permission.children = this.generatePermissionList(permissionList, permission.id)\n                pl.push(permission)\n            }\n        })\n        return pl\n    }\n    loadPermission = () => {\n        getRoleDetail(this.props.role?.id as number).then(response => {\n            const {code} = response.data\n            if (code !== 0) {\n                return\n            }\n            const {permissionList, permissionAll} = response.data.data;\n            let permissions = permissionList.map((permission: IPermission) => {\n                return permission.id\n            })\n            this.setState({\n                nodeList: this.generatePermissionList(permissionAll),\n                defaultCheckedKeys: permissions,\n            })\n            this.formRef.current?.setFieldsValue({\n                permissionList: permissions\n            })\n\n        })\n    }\n    /**\n     * https://react.docschina.org/docs/react-component.html#componentdidupdate\n     * 你也可以在 componentDidUpdate() 中直接调用 setState()，但请注意它必须被包裹在一个条件语句里，正如上述的例子那样进行处理，否则会导致死循环。它还会导致额外的重新渲染，虽然用户不可见，但会影响组件性能。\n     * @param prevProps\n     * @param prevState\n     * @param snapshot\n     */\n    componentDidUpdate = (prevProps: Readonly<IProps>, prevState: Readonly<IState>, snapshot?: any) => {\n        if (!prevProps.visible) {\n            // 删除一个角色，会造成在删除之后继续查询一次，加个判断，防止轻轻详情\n            if (this.props.role && prevState.nodeList.length === 0) {\n                this.loadPermission();\n            }\n        }\n    }\n\n    onCheck = (checkedKeys: any, info: any) => {\n        this.formRef.current?.setFieldsValue({\n            permissionList: checkedKeys.checked\n        })\n    };\n\n    render() {\n        this.formRef.current?.setFieldsValue({...this.props.role})\n        return (\n            <>\n                <Modal\n                    visible={this.props.visible}\n                    title=\"编辑用户信息\"\n                    onCancel={this.handleCancel}\n                    cancelText='取消'\n                    okText='确认'\n                    footer={null}\n                >\n                    <Form\n                        {...layout}\n                        ref={this.formRef}\n                        onFinish={this.saveRole}\n                        initialValues={{\n                            ...this.props.role,\n                            permissionList: []\n                        }}\n                    >\n                        <Form.Item\n                            label='编辑角色信息'\n                            name='roleName'\n                            rules={[{required: true, message: '角色名称不可以为空'}]}\n                            shouldUpdate={(prevValues, curValues) => prevValues.additional !== curValues.additional}\n                        >\n                            <Input/>\n                        </Form.Item>\n\n                        {\n                            this.state.nodeList.length > 0 ?\n                                <Form.Item\n                                    name='permissionList'\n                                    label='选择权限'\n                                    rules={[\n                                        {\n                                            type: \"array\",\n                                            min: 1,\n                                            required: true,\n                                            validator: (rule, value) => {\n                                                if (value.length <= 0) {\n                                                    return Promise.reject('至少要选择一个权限！')\n                                                }\n                                                return Promise.resolve()\n                                            }\n                                        },\n\n                                    ]}\n                                    shouldUpdate={(prevValues, curValues) => prevValues.additional !== curValues.additional}\n                                >\n\n                                    <Tree\n                                        defaultExpandAll\n                                        checkStrictly\n                                        showLine\n                                        checkable\n                                        treeData={this.state.nodeList}\n                                        defaultCheckedKeys={this.state.defaultCheckedKeys}\n                                        onCheck={this.onCheck}\n                                    />\n                                </Form.Item>\n                                :\n                                null\n                        }\n                        <Form.Item {...tailLayout}>\n                            <Space>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    提交\n                                </Button>\n                            </Space>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n","import React, {Component, RefObject} from \"react\";\nimport {Button, Form, Input, message, Modal, Space, Tree} from \"antd\";\nimport {FormInstance} from \"antd/lib/form\";\nimport {addRole} from \"../../api/role\";\nimport {getAllPermission} from \"../../api/permission\";\n\ninterface IProps {\n    visible: boolean\n    cancel: (r?: boolean) => void\n}\n\ninterface IRole {\n    roleName: string\n    permissionList: number[]\n}\n\ninterface IPermission {\n    id: number\n    key: number\n    isMenu: number\n    parentId: number\n    path: string\n    title: string\n    children: IPermission[]\n}\n\ninterface IState {\n    nodeList: IPermission[]\n}\n\nconst tailLayout = {\n    wrapperCol: {offset: 8, span: 16},\n};\nconst layout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 16},\n};\n\n// 为什么用类写呢，因为类的变量作用域更加明确\n// 聪明人利用规则，选择合适的方式处理问题\n// 有么有人知道怎么在电脑回复弹幕的\nexport default class AddRole extends Component<IProps, IState> {\n    formRef: RefObject<FormInstance>\n\n    constructor(props: IProps, context: any) {\n        super(props, context);\n        this.formRef = React.createRef<FormInstance>()\n        this.state = {\n            nodeList: []\n        }\n    }\n\n    cancel = () => {\n        this.formRef.current?.resetFields()\n        this.props.cancel()\n    }\n    addRole = (role: IRole) => {\n        addRole(role).then(response => {\n            const {msg, code} = response.data\n            if (code === 0) {\n                message.success(msg)\n                this.props.cancel(true)\n            } else {\n                message.error(msg)\n            }\n        })\n    }\n    getAllPermission = () => {\n        getAllPermission().then(response => {\n            const {data} = response.data\n            this.setState({\n                nodeList: this.generatePermissionList(data),\n            })\n        })\n    }\n    generatePermissionList = (permissionList: IPermission[], parentId: number = 0): IPermission[] => {\n        let pl: IPermission[] = []\n        permissionList.forEach((permission: IPermission) => {\n            if (permission.parentId === parentId) {\n                permission.key = permission.id\n                permission.children = this.generatePermissionList(permissionList, permission.id)\n                pl.push(permission)\n            }\n        })\n        return pl\n    }\n\n    componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<IState>, snapshot?: any) {\n        if (!prevProps.visible && prevState.nodeList.length === 0) {\n            this.getAllPermission()\n        }\n    }\n\n    onCheck = (checkedKeys: any, info: any) => {\n        this.formRef.current?.setFieldsValue({\n            permissionList: checkedKeys.checked\n        })\n    };\n    reset = () => {\n        this.formRef.current?.resetFields()\n    }\n\n    render() {\n        return (\n            <>\n                <Modal\n                    title=\"添加角色\"\n                    visible={this.props.visible}\n                    onCancel={this.cancel}\n                    footer={null}\n                >\n                    <Form\n                        ref={this.formRef}\n                        {...layout}\n                        onFinish={this.addRole}\n                        onReset={this.reset}\n                        initialValues={{\n                            roleName: '',\n                            permissionList: []\n                        }}\n                    >\n                        <Form.Item\n                            label={'角色名称'}\n                            name='roleName'\n                            rules={[\n                                {\n                                    type: \"string\",\n                                    required: true,\n                                    message: '角色名称不可以为空'\n                                }\n                            ]}\n                        >\n                            <Input/>\n                        </Form.Item>\n                        <Form.Item\n                            name='permissionList'\n                            rules={[\n                                {\n                                    type: \"array\",\n                                    min: 1,\n                                    required: true,\n                                    validator: (rule, value) => {\n                                        if (value.length <= 0) {\n                                            return Promise.reject('至少要选择一个权限！')\n                                        }\n                                        return Promise.resolve()\n                                    }\n                                },\n\n                            ]}\n                            label='权限'>\n                            <Tree\n                                defaultExpandAll\n                                checkStrictly\n                                showLine\n                                checkable\n                                treeData={this.state.nodeList}\n                                onCheck={this.onCheck}\n                            />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Space>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    提交\n                                </Button>\n                                <Button type=\"default\" htmlType=\"reset\">\n                                    重置\n                                </Button>\n                            </Space>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {getRoleList} from \"../../api/role\";\nimport {Button, Space, Table} from \"antd\";\nimport DeleteRole from \"./DeleteRole\";\nimport EditRole from \"./EditRole\";\nimport Auth from \"../../Components/Auth\";\nimport AddRole from \"./AddRole\";\n\nexport interface IRole {\n    id: number\n    roleName: string\n    createdAt: string\n}\n\ninterface IState {\n    roleList: IRole[]\n    pageSize: number\n    page: number\n    totalCount: number\n    visible: boolean\n    loading: boolean\n    role?: IRole\n    isShowAddRoleModal: boolean\n}\n\nexport default class RoleList extends Component<any, IState> {\n\n    constructor(props: any, context: any) {\n        super(props, context);\n        this.state = {\n            roleList: [],\n            page: 1,\n            totalCount: 0,\n            pageSize: 15,\n            visible: false,\n            loading: true,\n            isShowAddRoleModal: false\n        }\n    }\n\n    getRoleList = (page: number = 1) => {\n        this.setState({\n            loading: true\n        })\n        getRoleList(page).then(response => {\n            const {data: {currentPage, dataList, totalCount, limit}} = response.data\n            this.setState({\n                page: currentPage,\n                roleList: dataList,\n                totalCount: totalCount,\n                pageSize: limit,\n                loading: false\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getRoleList()\n    }\n\n    deleteRole = (role: IRole) => {\n        this.setState({\n            roleList: this.state.roleList.filter(r => r.id !== role.id)\n        })\n    }\n    callback = (visible: boolean) => {\n        this.setState(() => ({\n            visible: visible\n        }))\n    }\n    show = (role?: IRole, visible: boolean = true) => {\n        this.setState(() => ({\n            visible: visible,\n            role: role\n        }))\n    }\n    saveRole = (role?: IRole) => {\n        this.setState((state) => ({\n            visible: false,\n            roleList: state.roleList.map(r => {\n                if (r.id === role?.id) {\n                    return role\n                } else {\n                    return r\n                }\n            }),\n            role: role\n        }))\n    }\n\n    onChange = (page: number) => {\n        this.getRoleList(page)\n    }\n    showAddRoleModal = () => {\n        this.setState({\n            isShowAddRoleModal: true\n        })\n    }\n    cancelAddRoleModal = (refresh?: boolean) => {\n        this.setState({\n            isShowAddRoleModal: false\n        });\n        if (refresh) {\n            this.getRoleList()\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Button type='primary' onClick={this.showAddRoleModal}>添加角色</Button>\n                <AddRole visible={this.state.isShowAddRoleModal} cancel={this.cancelAddRoleModal}/>\n                <EditRole visible={this.state.visible}\n                          role={this.state.role}\n                          callback={this.callback}\n                          saveRole={this.saveRole}/>\n                <Table\n                    loading={this.state.loading}\n                    dataSource={this.state.roleList}\n\n                    pagination={{\n                        position: ['bottomCenter'],\n                        total: this.state.totalCount,\n                        hideOnSinglePage: true,\n                        defaultCurrent: this.state.page,\n                        defaultPageSize: this.state.pageSize,\n                        showSizeChanger: false,\n                        onChange: this.onChange\n                    }}\n                    rowKey={'id'}\n                >\n                    <Table.Column\n                        title={'id'}\n                        dataIndex={'id'}\n                    />\n                    <Table.Column\n                        title={'角色名称'}\n                        dataIndex={'roleName'}\n                    />\n                    <Table.Column\n                        title={'创建时间'}\n                        dataIndex={'createdAt'}\n                    />\n                    <Table.Column\n                        title={'管理'}\n                        render={(role: IRole) => (\n                            <Space>\n                                <Auth path='editRole'>\n                                    <Button type='primary' onClick={() => {\n                                        this.show(role, true)\n                                    }}>编辑</Button>\n                                </Auth>\n                                <Auth path='deleteRole'>\n                                    <DeleteRole role={role} callback={this.deleteRole}/>\n                                </Auth>\n                            </Space>\n                        )}\n                    />\n                </Table>\n            </>\n        )\n    }\n}\n"],"sourceRoot":""}