{"version":3,"sources":["api/login.ts","api/permission.ts","router/index.tsx","Components/AdminHeader.tsx","Components/LeftBar.tsx","Components/AdminLayout.tsx","Components/View.tsx","App.tsx","reportWebVitals.ts","store/Admin.ts","store/Permission.ts","store/index.ts","index.tsx","utils/request.ts","utils/storage.ts"],"names":["login","data","request","url","method","getAdminInfo","getAllPermission","getAdminPermissionList","Login","lazy","Index","UserList","Page403","Page404","RoleList","AdminList","Config","leftRoute","id","path","title","isMenu","icon","DashboardOutlined","component","UserOutlined","routes","TeamOutlined","ApartmentOutlined","topRoute","authRoutes","unAuthRouters","exact","Header","Layout","AdminHeader","inject","observer","logout","props","admin","permission","changeState","history","replace","className","overlay","Item","onClick","this","src","avatar","name","DownOutlined","theme","mode","defaultSelectedKeys","map","route","to","Component","withRouter","LeftBar","state","defaultKeys","defaultOpenKeys","height","highLightMenu","location","pathname","forEach","r","matchPath","strict","setState","generateMenu","routerList","filter","permissionSet","has","SubMenu","getTitle","permissionList","match","isExact","document","body","clientHeight","nextProps","nextState","nextContext","style","minHeight","length","Sider","Content","Footer","AdminLayout","context","toggle","collapsed","auth","Set","trigger","collapsible","MenuUnfoldOutlined","MenuFoldOutlined","margin","padding","children","message","error","add","size","push","View","fallback","redirect","from","App","initAdmin","initPermission","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Admin","password","makeAutoObservable","observable","action","a","response","runInAction","console","log","clear","Permission","array","moment","locale","ReactDOM","render","store","zhCN","getElementById","service","axios","create","baseURL","process","timeout","interceptors","use","config","NProgress","start","headers","get","done","Promise","reject","status","code","warning","Modal","key","localStorage","getItem","set","val","setItem"],"mappings":"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","file":"static/js/main.616c2c34.chunk.js","sourcesContent":["import request from '../utils/request'\n\nexport const login = (data: any) => {\n    return request({\n        url: '/admin/login',\n        method: 'POST',\n        data: data\n    })\n}\nexport const getAdminInfo = () => {\n    return request({\n        url: '/admin/admin/info',\n        method: 'get'\n    })\n}\n","import request from '../utils/request'\n\nexport const getAllPermission = () => {\n    return request({\n        url: '/admin/permission/list'\n    })\n}\nexport const getAdminPermissionList = () => {\n    return request({\n        url: '/admin/admin/permission'\n    })\n}\n","import React, {lazy, ReactNode} from \"react\"\nimport {\n    DashboardOutlined,\n    UserOutlined,\n    TeamOutlined,\n    ApartmentOutlined,\n} from '@ant-design/icons';\n\nconst Login = lazy(() => import('../Pages/Login'))\nconst Index = lazy(() => import('../Pages/Dashboard/Index'))\nconst UserList = lazy(() => import('../Pages/User/UserList'))\nconst Page403 = lazy(() => import('../Pages/Page403'))\nconst Page404 = lazy(() => import('../Pages/Page404'))\nconst RoleList = lazy(() => import('../Pages/Role/RoleList'))\nconst AdminList = lazy(() => import('../Pages/Admin/AdminList'))\nconst Config = lazy(() => import('../Pages/Config/Index'))\n\nexport interface IRoute {\n    id: string,\n    exact?: boolean\n    path: string\n    title: string\n    parentId?: number\n    isMenu?: number\n    component?: ReactNode\n    routes?: IRoute[]\n    redirect?: string\n    icon?: ReactNode\n}\n\nexport const leftRoute: IRoute[] = [\n    {\n        id: '1-0',\n        path: '/admin/index',\n        title: '仪表盘',\n        isMenu: 1,\n        icon: <DashboardOutlined/>,\n        component: <Index/>\n    },\n    {\n        id: '2-0',\n        path: '/admin/user',\n        title: '用户管理',\n        icon: <UserOutlined/>,\n        routes: [\n            {\n                id: '2-1',\n                path: '/admin/user/list',\n                title: '用户列表',\n                icon: <UserOutlined/>,\n                component: <UserList/>\n            }\n        ]\n    },\n    {\n        id: '3-0',\n        path: '/admin/role',\n        title: '角色管理',\n        icon: <TeamOutlined/>,\n        routes: [\n            {\n                id: '3-1',\n                path: '/admin/role/list',\n                title: '角色列表',\n                icon: <TeamOutlined/>,\n                component: <RoleList/>\n            }\n        ]\n    },\n    {\n        id: '4-0',\n        path: '/admin/admin',\n        title: '管理员管理',\n        icon: <ApartmentOutlined/>,\n        routes: [\n            {\n                id: '4-1',\n                path: '/admin/admin/list',\n                title: '管理员列表',\n                icon: <ApartmentOutlined/>,\n                component: <AdminList/>\n            }\n        ]\n    },\n]\nexport const topRoute: IRoute[] = []\n\nexport const authRoutes: IRoute[] = [\n    ...leftRoute,\n    ...topRoute\n]\nexport const unAuthRouters: IRoute[] = [\n\n    {\n        id: '0-0',\n        exact: true,\n        path: '/login',\n        title: '登录',\n        isMenu: 1,\n        component: <Login/>\n    },\n    {\n        id: '01-0',\n        exact: true,\n        path: '/config',\n        title: '配置',\n        isMenu: 1,\n        component: <Config/>\n    },\n    {\n        id: '403-0',\n        exact: true,\n        path: '/403',\n        title: '403',\n        isMenu: 1,\n        component: <Page403/>\n    },\n    {\n        id: '404-0',\n        path: '*',\n        title: '404',\n        isMenu: 1,\n        component: <Page404/>\n    }\n]\n","import React, {Component} from \"react\";\nimport {inject, observer} from \"mobx-react\";\nimport Admin from \"../store/Admin\";\nimport {Avatar, Dropdown, Layout, Menu} from \"antd\";\nimport {DownOutlined} from '@ant-design/icons';\nimport {topRoute} from \"../router\";\nimport {NavLink, RouteComponentProps, withRouter} from \"react-router-dom\";\nimport Permission from \"../store/Permission\";\n\nconst {Header} = Layout;\n\ninterface IProps extends RouteComponentProps {\n    admin?: Admin\n    permission?: Permission\n}\n\n\n@inject('admin', 'permission')\n@observer\nclass AdminHeader extends Component<IProps, any> {\n\n    logout = () => {\n        this.props.admin?.logout()\n        this.props.permission?.changeState('loading')\n        this.props.history.replace('/login')\n    }\n\n    render() {\n        return (\n            <>\n                <Header className=\"header\">\n                    <Dropdown\n                        overlay={\n                            <Menu>\n                                <Menu.Item key=\"1\" onClick={this.logout}>\n                                    退出\n                                </Menu.Item>\n                            </Menu>\n                        }\n                        className={'admin'}\n                    >\n                        <div>\n                            <Avatar\n                                src={this.props.admin?.admin?.avatar}\n                            />\n\n                            <span className={'admin-name'}>\n                                {this.props.admin?.admin.name}\n                            </span>\n                            <DownOutlined/>\n                        </div>\n                    </Dropdown>\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['5-0']}>\n                        {\n                            topRoute.map(route => (\n                                <Menu.Item key={route.id}>\n                                    <NavLink to={route.path}>\n                                        {route.title}\n                                    </NavLink>\n                                </Menu.Item>\n                            ))\n                        }\n                    </Menu>\n                </Header>\n            </>\n        )\n    }\n}\n\nexport default withRouter(AdminHeader)\n","import React, {Component} from 'react'\nimport {NavLink, RouteComponentProps, withRouter} from 'react-router-dom'\nimport {Menu} from 'antd';\nimport {matchPath} from \"react-router\";\nimport {authRoutes, IRoute, leftRoute} from '../router';\n\ninterface ILeftBarState {\n    defaultKeys: string[]\n    defaultOpenKeys: string[]\n    height: number\n}\n\ninterface IProps extends RouteComponentProps {\n    permissionSet: Set<String>\n}\n\nclass LeftBar extends Component<IProps, ILeftBarState> {\n    state: ILeftBarState = {\n        defaultKeys: [],\n        defaultOpenKeys: [],\n        height: 0\n    }\n    highLightMenu = (authRoutes?: IRoute[], route?: IRoute) => {\n        let path = this.props.history.location.pathname\n        authRoutes?.forEach((r: IRoute) => {\n            let match = matchPath(path, {\n                path: r.path,\n                exact: true,\n                strict: false\n            })\n            if (match !== null) {\n                if (route) {\n                    this.setState({\n                        defaultKeys: [r.id],\n                        defaultOpenKeys: [route.id]\n                    });\n                } else {\n                    this.setState({\n                        defaultKeys: [r.id]\n                    });\n                }\n                return\n            } else {\n                this.highLightMenu(r?.routes, r)\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.highLightMenu(authRoutes)\n        this.setState(() => (\n            {\n                height: document.body.clientHeight - 62\n            }\n        ))\n    }\n\n    generateMenu = (routerList?: IRoute[]) => {\n        return (\n            <>\n                {\n                    routerList?.filter(r => this.props.permissionSet.has(r.path)).map((route) => {\n                        if (route.routes) {\n                            return (\n                                <Menu.SubMenu\n                                    key={route.id}\n                                    title={\n                                        <span>\n                                                {route.icon}\n                                            <span>{route.title}</span>\n                                            </span>\n                                    }\n                                >\n                                    {this.generateMenu(route.routes)}\n                                </Menu.SubMenu>\n                            )\n                        } else {\n                            return (\n                                <Menu.Item key={route.id} icon={route.icon}>\n                                    <NavLink to={route.path}>{route.title}</NavLink>\n                                </Menu.Item>\n                            )\n                        }\n                    })\n                }\n            </>\n        )\n    }\n    getTitle = (path: string, permissionList: IRoute[]) => {\n        for (let permission of permissionList) {\n            let match = matchPath(path, {path: permission.path, exact: permission.exact})\n            if (match !== null) {\n                if (!match.isExact && permission.routes) {\n                    this.getTitle(path, permission.routes)\n                } else {\n                    document.title = permission.title;\n                }\n                break\n            } else {\n                if (permission.routes) {\n                    this.getTitle(path, permission.routes)\n                }\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<ILeftBarState>, nextContext: any): boolean {\n        this.getTitle(nextProps.location.pathname, leftRoute)\n        return true\n    }\n\n    render() {\n        return (\n            <div style={{minHeight: this.state.height + 'px'}}>\n                <div className=\"logo\"/>\n                {\n                    this.state.defaultKeys.length > 0 ?\n                        <Menu\n                            theme=\"dark\"\n                            mode=\"inline\"\n                            defaultSelectedKeys={this.state.defaultKeys}\n                            defaultOpenKeys={this.state.defaultOpenKeys}\n                        >\n                            {this.generateMenu(leftRoute)}\n                        </Menu>\n                        :\n                        null\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(LeftBar)\n","import React, {Component, ReactNode} from \"react\";\nimport {MenuFoldOutlined, MenuUnfoldOutlined,} from '@ant-design/icons';\n\nimport {Layout, message} from 'antd';\nimport AdminHeader from \"./AdminHeader\";\nimport '../static/css/footer.css'\nimport LeftBar from \"./LeftBar\";\nimport {inject, observer} from \"mobx-react\";\nimport Permission from \"../store/Permission\";\nimport {withRouter} from \"react-router-dom\";\nimport {matchPath, RouteComponentProps} from \"react-router\";\n\nconst {Sider, Content, Footer} = Layout;\n\ninterface IProps extends RouteComponentProps {\n    children?: ReactNode\n    permission?: Permission\n}\n\ninterface IState {\n    collapsed: boolean\n    auth: boolean\n    permissionList?: string[]\n    permissionSet: Set<String>\n}\n\n@inject('permission')\n@observer\nclass AdminLayout extends Component<IProps, IState> {\n    constructor(props: IProps, context: any) {\n        super(props, context);\n        this.state = {\n            collapsed: false,\n            auth: false,\n            permissionSet: new Set<String>(),\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps: Readonly<IProps>, nextState: Readonly<IState>) {\n        if (nextProps.permission?.state === 'error') {\n            message.error('error')\n            nextProps.history.replace('/login')\n            return null\n        }\n        if (nextProps.permission?.state === 'success') {\n            let permissionSet = new Set<string>()\n            let auth = false\n            for (let permission of nextProps.permission?.permission) {\n                let match = matchPath(nextProps.location.pathname, {path: permission.path});\n                if (match !== null && match.isExact) {\n                    auth = true\n                }\n                permissionSet.add(permission.path);\n            }\n            if (permissionSet.size === 0) {\n                nextProps.history.replace('/login');\n                return null;\n            }\n            if (!auth) {\n                nextProps.history.push('/admin/index');\n                return null\n            }\n            return {permissionSet: permissionSet, auth: auth};\n        } else {\n            return null;\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n\n    render() {\n        if (this.props.permission?.state === 'loading') {\n            return (\n                <>\n                    loading\n                </>\n            )\n        }\n        return (\n            <>\n                <Layout>\n                    <AdminHeader/>\n                    <Layout>\n                        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                            <LeftBar permissionSet={this.state.permissionSet}/>\n                        </Sider>\n                        <Layout className=\"site-layout\">\n                            <span className={'trigger'} onClick={this.toggle}>\n                                {\n                                    this.state.collapsed ?\n                                        <MenuUnfoldOutlined/>\n                                        :\n                                        <MenuFoldOutlined/>\n                                }\n                            </span>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    margin: '24px 16px',\n                                    padding: 24,\n                                    minHeight: 280,\n                                }}\n                            >\n                                {this.props.children}\n                            </Content>\n                            <Footer className='footer'>\n\n                            </Footer>\n                        </Layout>\n                    </Layout>\n                </Layout>\n            </>\n\n        );\n    }\n}\n\nexport default withRouter(AdminLayout)\n","import React, {Component, Suspense} from 'react'\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport {authRoutes, unAuthRouters} from '../router'\nimport AdminLayout from './AdminLayout'\n\nclass View extends Component {\n    render() {\n        return (\n            <>\n                <Router>\n                    <Switch>\n                        <Route path={'/'} exact>\n                            <Redirect to={'/admin/index'}/>\n                        </Route>\n                        <Route path={'/admin'}>\n                            <Switch>\n                                <AdminLayout>\n                                    <Suspense fallback={<></>}>\n                                        {\n                                            authRoutes.map((route) => {\n                                                if (route.routes) {\n                                                    return (\n                                                        <div key={route.id}>\n                                                            {\n                                                                route.routes.map((r) => (\n                                                                    <Route path={r.path} exact={r.exact} key={r.id}>\n                                                                        {r.component}\n                                                                    </Route>\n                                                                ))\n                                                            }\n                                                        </div>\n                                                    )\n                                                }\n                                                return (\n                                                    <Route path={route.path} exact={route.exact} key={route.id}>\n                                                        {\n                                                            route.redirect ?\n                                                                <Redirect to={route.redirect} from={route.path}/>\n                                                                :\n                                                                route.component\n                                                        }\n                                                    </Route>\n                                                )\n                                            })\n                                        }\n                                    </Suspense>\n                                </AdminLayout>\n                            </Switch>\n                        </Route>\n                        <Suspense fallback={<></>}>\n                            <Switch>\n                                {\n                                    unAuthRouters.map((route) => (\n                                        <Route path={route.path} key={route.id} exact={route.exact}>\n                                            {\n                                                route.component\n                                            }\n                                        </Route>\n                                    ))\n                                }\n                            </Switch>\n                        </Suspense>\n                    </Switch>\n                </Router>\n            </>\n        )\n    }\n}\n\nexport default View\n","import React, {Component} from 'react';\nimport View from \"./Components/View\";\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport {inject, observer} from \"mobx-react\";\nimport Permission from \"./store/Permission\";\nimport Admin from \"./store/Admin\";\n\ninterface IProps {\n    permission?: Permission\n    admin?: Admin\n}\n\n@inject('permission', 'admin')\n@observer\nclass App extends Component<IProps, any> {\n\n\n    componentDidMount() {\n        this.props.admin?.initAdmin();\n        this.props.permission?.initPermission()\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <View/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {action, makeAutoObservable, observable, runInAction} from \"mobx\";\nimport {clear} from \"../utils/storage\";\nimport {getAdminInfo} from \"../api/login\";\n\nexport interface IAdmin {\n    name: string\n    avatar?: string\n    password: string\n}\n\nexport default class Admin {\n    @observable\n    admin: IAdmin = {name: '', avatar: '', password: ''}\n    @observable state: string = 'loading';\n\n    constructor(admin: IAdmin = {name: '', avatar: '', password: ''}) {\n        this.admin = admin;\n        makeAutoObservable(this)\n    }\n\n    @action\n    initAdmin = async () => {\n        try {\n            const data = await getAdminInfo().then(response => {\n                const {data} = response.data\n                return data\n            })\n            runInAction(() => {\n                this.admin = observable(data);\n            })\n        } catch (e) {\n            console.log(e)\n            runInAction(() => {\n                this.state = \"error\"\n            })\n\n        }\n    }\n    @action\n    logout = () => {\n        this.admin = {name: '', avatar: '', password: ''}\n        clear()\n    }\n    @action\n    login = (admin: IAdmin) => {\n        this.admin = admin\n    }\n}\n","import {action, makeAutoObservable, observable, runInAction} from \"mobx\";\nimport {getAdminPermissionList} from \"../api/permission\";\nimport {IRoute} from \"../router\";\n\nexport default class Permission {\n    @observable\n    permission: IRoute[] = []\n    @observable state: string = 'loading';\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    @action\n    initPermission = async () => {\n        try {\n            const data = await getAdminPermissionList().then(response => {\n                const {data} = response.data\n                return data\n            })\n            runInAction(() => {\n                this.permission = observable.array(data);\n                this.state = 'success'\n            })\n        } catch (e) {\n            runInAction(() => {\n                this.state = \"error\"\n            })\n\n        }\n    }\n    @action\n    changeState = (state: string) => {\n        this.state = state\n    }\n    @action\n    getPermissionList = () => {\n        return this.permission\n    }\n}\n","import Admin from \"./Admin\";\nimport Permission from \"./Permission\";\n// eslint-disable-next-line\nexport default {\n    admin: new Admin(),\n    permission: new Permission()\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'mobx-react';\nimport store from './store'\nimport {ConfigProvider} from 'antd';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('cn');\nReactDOM.render(\n    <Provider {...store}>\n        <ConfigProvider locale={zhCN}>\n            <App/>\n        </ConfigProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios'\nimport {message, Modal} from 'antd';\nimport NProgress from 'nprogress'\nimport {clear, get} from \"./storage\";\n// create an axios instance\nconst service = axios.create({\n    baseURL: process.env.REACT_APP_BASE_API, // url = base url + request url\n    // withCredentials: true, // send cookies when cross-domain requests\n    timeout: 5000 // request timeout\n})\n// request interceptor\nservice.interceptors.request.use(\n    config => {\n        NProgress.start();\n        config.headers['Authorization'] = get('token');\n        return config\n    },\n    error => {\n        NProgress.done();\n        return Promise.reject(error)\n    }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n    response => {\n        NProgress.done();\n        if (response.status === 200) {\n            const {code} = response.data\n            if (code === 4003) {\n                message.warning('你的登录状态已经丢失，请退出后重新登录！')\n                return Promise.reject('请登录')\n            } else if (code === 4000) {\n                clear()\n                // window.location.href = '/login'\n                return Promise.reject('认证失败')\n            }\n            return response;\n        } else {\n            Modal.error({\n                title: '网络请求错误'\n            });\n            return Promise.reject('网络请求错误')\n        }\n    },\n    error => {\n        Modal.error({\n            title: '网络请求错误'\n        });\n        NProgress.done();\n        return Promise.reject(error)\n    }\n)\n\nexport default service\n","export const rm = (key: string) => {\n    localStorage.removeItem(key)\n}\nexport const get = (key: string): string | null => {\n    return localStorage.getItem(key)\n}\nexport const set = (key: string, val: string) => {\n    return localStorage.setItem(key, val)\n}\nexport const clear = () => {\n    return localStorage.clear()\n}\n"],"sourceRoot":""}